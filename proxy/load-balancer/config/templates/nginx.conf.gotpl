daemon on;
worker_processes 1;

error_log /dev/stderr info;

events {
  worker_connections 1024;
  use epoll;
}

http {
  include mime.types;
  default_type application/octet-stream;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  keepalive_timeout 65;

  gzip on;
  gzip_min_length 1100;
  gzip_buffers 4 8k;
  gzip_types text/plain;

  proxy_buffer_size       128k;
  proxy_buffers           4 254k;
  proxy_busy_buffers_size 256k;

  access_log /dev/stdout;

  server {
    listen 80 default_server;
    server_name localhost;

    root /var/www/localhost/htdocs;
    location / {
      autoindex on;
    }
  }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  # ============================================================================
  # self-discovering http services
  # ============================================================================
  {{range $tag, $service := service "http" | byTag}}

  upstream {{$tag}} {
    least_conn;
  {{range $service}}
    server {{.Address}}:{{.Port}} max_fails=3 fail_timeout=60 weight=1;
  {{else}}
    server 127.0.0.1:65535; # force a 502
  {{end}}
  }

  server {
    listen 0.0.0.0;
    server_name {{$tag}}.proxy;

    location / {
      proxy_pass http://{{$tag}};
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;
    }
  }
  {{end}}

  # ============================================================================
  # K/V proxies
  # ============================================================================
  {{range ls "proxies/" }}
    {{ $proxy := .Value | regexReplaceAll "(https?://|/)" "" }}
    upstream {{ $proxy }}.proxy {
      least_conn;
      server {{ $proxy }}:80;
    }

    server {
      listen 0.0.0.0;
      server_name {{ .Key }};

      location / {
        proxy_pass http://{{ $proxy }}.proxy;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host {{ $proxy }};
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
      }
    }
  {{end}}

}
